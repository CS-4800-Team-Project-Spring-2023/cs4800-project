# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Python Package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
     runs-on: ubuntu-22.04
     strategy:
       fail-fast: false
       matrix:
          python-version: [3.10.6]
     steps:
     - uses: actions/checkout@master
     
     - name: Initialize Python 3.10.6
       uses: actions/setup-python@v1
       with:
         python-version: ${{matrix.python-version}}
     
     - name: Checkout the files
       uses: actions/checkout@v3

     - name: Copy Flask Folder to EC2 via SSH Key
       uses: appleboy/scp-action@v0.1.4
       with:
         host: ec2-52-53-124-118.us-west-1.compute.amazonaws.com
         username: ubuntu
         port: 22
         key: ${{ secrets.KEY }}
         source: ${{ github.workspace }}
         target: "cs4800-project"
         
     - name: Run commands to start Flask venv and application
       uses: appleboy/ssh-action@v0.1.9
       with:
         host: ec2-52-53-124-118.us-west-1.compute.amazonaws.com
         username: ubuntu
         key: ${{ secrets.KEY }}
         port: 22
         script: |
           ps -e | grep flask | awk '{print $1}' | xargs kill
           cd cs4800-project/github/workspace
           source .venv/bin/activate
           # nohup variant command that redirects output in order to avoid actions timeout
           nohup flask run --host=172.31.23.38 > nohup.out 2> nohup.err < /dev/null &
